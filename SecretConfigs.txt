Secret as Volume

apiVersion: v1
kind: Pod
metadata:
  name: mypod
spec:
  containers:
  - name: mypod
    image: redis
    volumeMounts:
    - name: config
      mountPath: "/etc/vols"
      readOnly: true
  volumes:
  - name: config
    secret:
      secretName: db-user-pass
# (use the secret name in Step 3 of the previous exercise)


Secret as Variable
==================
YAML FILE
-------------
apiVersion: v1
kind: Pod
metadata:
  name: secret-envars-test-pod
spec:
  containers:
  - name: envars-test-container
    image: nginx
    env:
    - name: SECRET_USERNAME
      valueFrom:
        secretKeyRef:
          name: txtkeys
          key: username
    - name: SECRET_PASSWORD
      valueFrom:
        secretKeyRef:
          name: txtkeys
          key: password

CM as variable
---------------

kind: ConfigMap 
apiVersion: v1 
metadata:
  name: example-configmap 
data:
  # Configuration values can be set as key-value properties
  database: mongodb
  database_uri: mongodb://localhost:27017
  
  # Or set as complete file contents (even JSON!)
  keys: | 
    image.public.key=771 
    rsa.public.key=42

CM as Inject Pod 
------------------

kind: Pod 
apiVersion: v1 
metadata:
  name: pod-from-cm 
spec:
  containers:
    - name: env-var-configmap
      image: nginx
      envFrom:
        - configMapRef:
            name: example-configmap
            
            
Changes.. by value...
===========================

kind: Pod 
apiVersion: v1 
metadata:
  name: pod-from-cm-volume
  namespace: demoapp
spec:
  containers:
    - name: env-var-configmap
      image: nginx
      volumeMounts:
        - mountPath: /config
          name: appconfig-data-volume
  volumes:
    - name: appconfig-data-volume
      configMap:
         name: example-configmap